{"version":3,"sources":["components/Widget/Section.js","components/Widget/Statistics.js","components/Widget/FeedbackOptions.js","components/Widget/Notification.js","components/Widget/Widget.js","App.js","index.js","components/Widget/Widget.module.css"],"names":["Section","title","children","Statistics","options","feedbaks","total","percentage","positivePercentage","toFixed","map","option","FeedbackOptions","onLeaveFeedback","className","styles","btn_container","btn","onClick","Notification","message","Widget","useState","good","setGood","neutral","setNeutral","bad","setBad","countTotalFeedback","feedback","prev","console","log","countPositiveFeedbackPercentage","App","ReactDOM","render","document","getElementById","module","exports"],"mappings":"6LAUeA,EARC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACtB,OACI,oCACI,6BAAKD,IACHC,MCUCC,EAdI,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,QAASC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,MAC/BC,EAD+D,EAAzBC,mBACNC,QAAQ,GAC9C,OACA,qCACQ,2CACCL,EAAQM,KAAI,SAACC,GACV,OACI,8BAAiBA,EAAjB,KAA2BN,EAASM,KAA5BA,MAEpB,wCAAYL,KACZ,oDAAwBC,EAAxB,Y,gBCCOK,EAVS,SAAC,GAAkC,IAAhCR,EAA+B,EAA/BA,QAASS,EAAsB,EAAtBA,gBAEhC,OACI,qBAAKC,UAAWC,IAAOC,cAAvB,SACKZ,EAAQM,KAAI,SAACC,GACV,OAAQ,wBAAqBG,UAAWC,IAAOE,IAAKC,QAAS,kBAAML,EAAgBF,IAA3E,SAAsFA,GAAzEA,SCFtBQ,EAHM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAQ,4BAAKA,KCGXhB,EAAU,CAAC,OAAQ,UAAW,OA+CrBiB,MA7Cf,WAEI,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,mBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAsBJ,mBAAS,GAA/B,mBAAOK,EAAP,KAAYC,EAAZ,KAGMvB,EAAW,CACbkB,OACAE,UACAE,OAkBCE,EAAqB,SAAC,GACvB,OADiD,EAAzBN,KAAyB,EAAnBE,QAAmB,EAAVE,KAO3C,OACI,eAAC,EAAD,CAAS1B,MAAM,wBAAf,UACI,cAAC,EAAD,CAAiBG,QAASA,EAASS,gBAxBtB,SAACiB,GACnB,OAAQA,GACJ,IAAK,OACDN,GAAQ,SAAAO,GAAI,OAAIA,EAAO,KACvB,MACJ,IAAK,UACDL,GAAW,SAAAK,GAAI,OAAIA,EAAO,KAC1B,MACJ,IAAK,MACDH,GAAO,SAAAG,GAAI,OAAIA,EAAO,KACtB,MACJ,QAASC,QAAQC,IAAI,oBAcnBJ,EAAmBxB,GAChB,cAAC,EAAD,CAAYD,QAASA,EAASC,SAAUA,EAAUC,MAAOuB,EAAmBxB,GAAWG,mBAR5D,SAAC,GAA0B,IAAzBe,EAAwB,EAAxBA,KACrC,OAAQA,IAASA,EAD4C,EAAlBE,QAAkB,EAATE,KACX,KAO0EO,CAAgC7B,KAC3I,cAAC,EAAD,CAAce,QAAQ,0BC1CvBe,EAJH,kBACR,cAAC,EAAD,K,MCCJC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U,kBCJjDC,EAAOC,QAAU,CAAC,IAAM,oBAAoB,cAAgB,iC","file":"static/js/main.214f3488.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n    return (\r\n        <section>\r\n            <h1>{title}</h1>\r\n            { children }\r\n        </section>\r\n    )\r\n}\r\nexport default Section\r\n\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n}","import PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ options, feedbaks, total, positivePercentage }) => {\r\n    const percentage = positivePercentage.toFixed(2)\r\n    return (\r\n    <>\r\n            <h2>Staistics</h2>\r\n            {options.map((option) => {\r\n                return (\r\n                    <p key={option}>{option}: {feedbaks[option]}</p>)\r\n            })}\r\n        <p>Total: { total }</p>\r\n        <p>Positive feedback: { percentage } %</p>\r\n    </>\r\n    )\r\n}\r\nexport default Statistics\r\n\r\nStatistics.propTypes = {\r\n    options: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n    state: PropTypes.shape({\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired\r\n  }),\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired\r\n}","import styles from './Widget.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n\r\n    return (\r\n        <div className={styles.btn_container}>\r\n            {options.map((option) => {\r\n                return (<button key={option} className={styles.btn} onClick={() => onLeaveFeedback(option)} >{option}</button>)\r\n            })}\r\n        </div>\r\n    );\r\n};\r\nexport default FeedbackOptions\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.arrayOf(PropTypes.string.isRequired)\r\n};","import PropTypes from 'prop-types';\r\n\r\n\r\nconst Notification = ({ message }) => {\r\n    return (<p>{ message }</p>)\r\n}\r\nexport default Notification\r\n\r\nNotification.propTypes  = {\r\n    message: PropTypes.string.isRequired\r\n}","import { useState } from \"react\";\r\n\r\nimport Section from './Section'\r\nimport Statistics from './Statistics'\r\nimport FeedbackOptions from './FeedbackOptions'\r\nimport Notification from './Notification'\r\n\r\nconst options = ['good', 'neutral', 'bad']\r\n\r\nfunction Widget () {\r\n\r\n    const [good, setGood] = useState(0);\r\n    const [neutral, setNeutral] = useState(0);\r\n    const [bad, setBad] = useState(0);\r\n\r\n\r\n    const feedbaks = {\r\n        good,\r\n        neutral,\r\n        bad\r\n    };\r\n\r\n   const leaveFeedback = (feedback) => {\r\n       switch (feedback) {\r\n           case 'good':\r\n               setGood(prev => prev + 1)\r\n               break;\r\n           case 'neutral':\r\n               setNeutral(prev => prev + 1)\r\n               break;\r\n           case 'bad':\r\n               setBad(prev => prev + 1)\r\n               break;\r\n           default: console.log('Invalid type')\r\n        }\r\n    };\r\n\r\n   const countTotalFeedback = ({good, neutral, bad} ) => {\r\n        return (good + neutral + bad)\r\n    };\r\n   const countPositiveFeedbackPercentage = ({good, neutral, bad}) => {\r\n        return (good / ((good + neutral + bad) / 100))\r\n    };\r\n\r\n    return (\r\n        <Section title=\"Please leave feedback\">\r\n            <FeedbackOptions options={options} onLeaveFeedback={leaveFeedback} />\r\n            {countTotalFeedback(feedbaks) ?\r\n                <Statistics options={options} feedbaks={feedbaks} total={countTotalFeedback(feedbaks)} positivePercentage={countPositiveFeedbackPercentage(feedbaks)} /> :\r\n                <Notification message=\"No feedback given\" />\r\n            }\r\n        </Section>\r\n    );\r\n};\r\nexport default Widget\r\n","// import Hello from './components/Hello'\r\nimport Widget from './components/Widget/Widget'\r\n\r\nconst App = () => (\r\n    <Widget />\r\n);\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Widget_btn__3tkEH\",\"btn_container\":\"Widget_btn_container__39jOQ\"};"],"sourceRoot":""}